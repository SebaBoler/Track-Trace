# import * from "./generated/authorizationApi.graphql"

type Mutation {
  createUser(data: UserCreateInput!): User!
  login(email: String!, password: String!): AuthPayload!
}

type Query {
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  user(where: UserWhereUniqueInput!): User
  me: User!
  #   contractor(where: ContractorWhereUniqueInput!): Contractor
}

type User {
  id: ID!
  name: String
  email: String!
  createdAt: DateTime
  updatedAt: DateTime
  isTemporary: Boolean!
  Role: RoleType
}

type AuthPayload {
  token: String!
  user: User!
}
